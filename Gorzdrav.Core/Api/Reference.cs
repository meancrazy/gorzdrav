//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gorzdrav.Core.Api {
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AriaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Document_NField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Document_SField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Polis_NField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Polis_SField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AriaNumber {
            get {
                return this.AriaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AriaNumberField, value) != true)) {
                    this.AriaNumberField = value;
                    this.RaisePropertyChanged("AriaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document_N {
            get {
                return this.Document_NField;
            }
            set {
                if ((object.ReferenceEquals(this.Document_NField, value) != true)) {
                    this.Document_NField = value;
                    this.RaisePropertyChanged("Document_N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document_S {
            get {
                return this.Document_SField;
            }
            set {
                if ((object.ReferenceEquals(this.Document_SField, value) != true)) {
                    this.Document_SField = value;
                    this.RaisePropertyChanged("Document_S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPat {
            get {
                return this.IdPatField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPatField, value) != true)) {
                    this.IdPatField = value;
                    this.RaisePropertyChanged("IdPat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Polis_N {
            get {
                return this.Polis_NField;
            }
            set {
                if ((object.ReferenceEquals(this.Polis_NField, value) != true)) {
                    this.Polis_NField = value;
                    this.RaisePropertyChanged("Polis_N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Polis_S {
            get {
                return this.Polis_SField;
            }
            set {
                if ((object.ReferenceEquals(this.Polis_SField, value) != true)) {
                    this.Polis_SField = value;
                    this.RaisePropertyChanged("Polis_S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SearchTop10PatientResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AddNewPatientResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetDocListFullTreeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InspectDoctorsReferalResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetAvaibleAppointmentsResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SetAppointmentResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetAvailableDatesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetDoctorListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetLPUListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetOrgListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetSpesialityListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetWorkingTimeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetFullInfoByIdResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CreateClaimForRefusalResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetPatientHistoryResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UpdatePhoneByIdPatResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetHubUserByGuidResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetErrorListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SetWaitingListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetStatusAnalysisResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendNotificationAboutAppointmentResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SendNotificationAboutAppointmentStatusResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetTodayAppointmentResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckInResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GetVersionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckPatientResult))]
    public partial class MethodResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Error> ErrorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Error> ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdHistory {
            get {
                return this.IdHistoryField;
            }
            set {
                if ((this.IdHistoryField.Equals(value) != true)) {
                    this.IdHistoryField = value;
                    this.RaisePropertyChanged("IdHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTop10PatientResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SearchTop10PatientResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Patient> ListPatientField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Patient> ListPatient {
            get {
                return this.ListPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.ListPatientField, value) != true)) {
                    this.ListPatientField = value;
                    this.RaisePropertyChanged("ListPatient");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddNewPatientResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class AddNewPatientResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPatField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPat {
            get {
                return this.IdPatField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPatField, value) != true)) {
                    this.IdPatField = value;
                    this.RaisePropertyChanged("IdPat");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocListFullTreeResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetDocListFullTreeResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Essence> ListDoctorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Essence> ListDoctor {
            get {
                return this.ListDoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.ListDoctorField, value) != true)) {
                    this.ListDoctorField = value;
                    this.RaisePropertyChanged("ListDoctor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InspectDoctorsReferalResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class InspectDoctorsReferalResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdLpuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Id_PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppointmentType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDoc {
            get {
                return this.IdDocField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDocField, value) != true)) {
                    this.IdDocField = value;
                    this.RaisePropertyChanged("IdDoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLpu {
            get {
                return this.IdLpuField;
            }
            set {
                if ((this.IdLpuField.Equals(value) != true)) {
                    this.IdLpuField = value;
                    this.RaisePropertyChanged("IdLpu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_Patient {
            get {
                return this.Id_PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.Id_PatientField, value) != true)) {
                    this.Id_PatientField = value;
                    this.RaisePropertyChanged("Id_Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppointmentType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAvaibleAppointmentsResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetAvaibleAppointmentsResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Appointment> ListAppointmentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Appointment> ListAppointments {
            get {
                return this.ListAppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListAppointmentsField, value) != true)) {
                    this.ListAppointmentsField = value;
                    this.RaisePropertyChanged("ListAppointments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetAppointmentResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SetAppointmentResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SpecialistType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SpecialistType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAvailableDatesResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetAvailableDatesResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.DateTime> AvailableDateListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.DateTime> AvailableDateList {
            get {
                return this.AvailableDateListField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableDateListField, value) != true)) {
                    this.AvailableDateListField = value;
                    this.RaisePropertyChanged("AvailableDateList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDoctorListResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetDoctorListResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Doctor> DocsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Doctor> Docs {
            get {
                return this.DocsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocsField, value) != true)) {
                    this.DocsField = value;
                    this.RaisePropertyChanged("Docs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLPUListResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetLPUListResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Clinic> ListLPUField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Clinic> ListLPU {
            get {
                return this.ListLPUField;
            }
            set {
                if ((object.ReferenceEquals(this.ListLPUField, value) != true)) {
                    this.ListLPUField = value;
                    this.RaisePropertyChanged("ListLPU");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetOrgListResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetOrgListResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Org> OrgListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Org> OrgList {
            get {
                return this.OrgListField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgListField, value) != true)) {
                    this.OrgListField = value;
                    this.RaisePropertyChanged("OrgList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSpesialityListResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetSpesialityListResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Spesiality> ListSpesialityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Spesiality> ListSpesiality {
            get {
                return this.ListSpesialityField;
            }
            set {
                if ((object.ReferenceEquals(this.ListSpesialityField, value) != true)) {
                    this.ListSpesialityField = value;
                    this.RaisePropertyChanged("ListSpesiality");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWorkingTimeResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetWorkingTimeResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WorkingTime> WorkingTimeListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WorkingTime> WorkingTimeList {
            get {
                return this.WorkingTimeListField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingTimeListField, value) != true)) {
                    this.WorkingTimeListField = value;
                    this.RaisePropertyChanged("WorkingTimeList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFullInfoByIdResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetFullInfoByIdResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Doctor DocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Spesiality DoctorsSpesialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Clinic LPUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Patient PatField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Doctor Doc {
            get {
                return this.DocField;
            }
            set {
                if ((object.ReferenceEquals(this.DocField, value) != true)) {
                    this.DocField = value;
                    this.RaisePropertyChanged("Doc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Spesiality DoctorsSpesiality {
            get {
                return this.DoctorsSpesialityField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorsSpesialityField, value) != true)) {
                    this.DoctorsSpesialityField = value;
                    this.RaisePropertyChanged("DoctorsSpesiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Clinic LPU {
            get {
                return this.LPUField;
            }
            set {
                if ((object.ReferenceEquals(this.LPUField, value) != true)) {
                    this.LPUField = value;
                    this.RaisePropertyChanged("LPU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Patient Pat {
            get {
                return this.PatField;
            }
            set {
                if ((object.ReferenceEquals(this.PatField, value) != true)) {
                    this.PatField = value;
                    this.RaisePropertyChanged("Pat");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateClaimForRefusalResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class CreateClaimForRefusalResult : MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPatientHistoryResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetPatientHistoryResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HistoryRefusal> ListHistoryRefusalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HistoryVisit> ListHistoryVisitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HistoryRefusal> ListHistoryRefusal {
            get {
                return this.ListHistoryRefusalField;
            }
            set {
                if ((object.ReferenceEquals(this.ListHistoryRefusalField, value) != true)) {
                    this.ListHistoryRefusalField = value;
                    this.RaisePropertyChanged("ListHistoryRefusal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HistoryVisit> ListHistoryVisit {
            get {
                return this.ListHistoryVisitField;
            }
            set {
                if ((object.ReferenceEquals(this.ListHistoryVisitField, value) != true)) {
                    this.ListHistoryVisitField = value;
                    this.RaisePropertyChanged("ListHistoryVisit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdatePhoneByIdPatResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class UpdatePhoneByIdPatResult : MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetHubUserByGuidResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetHubUserByGuidResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HubUser> HubUserListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HubUser> HubUserList {
            get {
                return this.HubUserListField;
            }
            set {
                if ((object.ReferenceEquals(this.HubUserListField, value) != true)) {
                    this.HubUserListField = value;
                    this.RaisePropertyChanged("HubUserList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetErrorListResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetErrorListResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Error> ErrorList1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="ErrorList")]
        public System.Collections.Generic.List<Error> ErrorList1 {
            get {
                return this.ErrorList1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorList1Field, value) != true)) {
                    this.ErrorList1Field = value;
                    this.RaisePropertyChanged("ErrorList1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetWaitingListResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SetWaitingListResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidClaimField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GuidClaim {
            get {
                return this.GuidClaimField;
            }
            set {
                if ((this.GuidClaimField.Equals(value) != true)) {
                    this.GuidClaimField = value;
                    this.RaisePropertyChanged("GuidClaim");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetStatusAnalysisResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetStatusAnalysisResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Collections.Generic.KeyValuePair<int, string>> StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Collections.Generic.KeyValuePair<int, string>> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendNotificationAboutAppointmentResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SendNotificationAboutAppointmentResult : MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendNotificationAboutAppointmentStatusResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SendNotificationAboutAppointmentStatusResult : MethodResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTodayAppointmentResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetTodayAppointmentResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<SchedulerOfDoctor> SchedulerOfDoctorListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SchedulerOfDoctor> SchedulerOfDoctorList {
            get {
                return this.SchedulerOfDoctorListField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulerOfDoctorListField, value) != true)) {
                    this.SchedulerOfDoctorListField = value;
                    this.RaisePropertyChanged("SchedulerOfDoctorList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckInResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class CheckInResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Office {
            get {
                return this.OfficeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeField, value) != true)) {
                    this.OfficeField = value;
                    this.RaisePropertyChanged("Office");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVersionResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class GetVersionResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckPatientResult", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class CheckPatientResult : MethodResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPatField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPat {
            get {
                return this.IdPatField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPatField, value) != true)) {
                    this.IdPatField = value;
                    this.RaisePropertyChanged("IdPat");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdError {
            get {
                return this.IdErrorField;
            }
            set {
                if ((this.IdErrorField.Equals(value) != true)) {
                    this.IdErrorField = value;
                    this.RaisePropertyChanged("IdError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Essence", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Essence : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdEssenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Essence> ListEssenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEssenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdEssence {
            get {
                return this.IdEssenceField;
            }
            set {
                if ((object.ReferenceEquals(this.IdEssenceField, value) != true)) {
                    this.IdEssenceField = value;
                    this.RaisePropertyChanged("IdEssence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Essence> ListEssence {
            get {
                return this.ListEssenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ListEssenceField, value) != true)) {
                    this.ListEssenceField = value;
                    this.RaisePropertyChanged("ListEssence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEssence {
            get {
                return this.NameEssenceField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEssenceField, value) != true)) {
                    this.NameEssenceField = value;
                    this.RaisePropertyChanged("NameEssence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentType", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    public enum AppointmentType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        отсутстствует_неопределено = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        повторный = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        консультация = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NoticeAppointment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StatusAppointment))]
    public partial class Appointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdAppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdAppointment {
            get {
                return this.IdAppointmentField;
            }
            set {
                if ((object.ReferenceEquals(this.IdAppointmentField, value) != true)) {
                    this.IdAppointmentField = value;
                    this.RaisePropertyChanged("IdAppointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitEnd {
            get {
                return this.VisitEndField;
            }
            set {
                if ((this.VisitEndField.Equals(value) != true)) {
                    this.VisitEndField = value;
                    this.RaisePropertyChanged("VisitEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitStart {
            get {
                return this.VisitStartField;
            }
            set {
                if ((this.VisitStartField.Equals(value) != true)) {
                    this.VisitStartField = value;
                    this.RaisePropertyChanged("VisitStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoticeAppointment", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class NoticeAppointment : Appointment {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordDateTime {
            get {
                return this.RecordDateTimeField;
            }
            set {
                if ((this.RecordDateTimeField.Equals(value) != true)) {
                    this.RecordDateTimeField = value;
                    this.RaisePropertyChanged("RecordDateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusAppointment", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class StatusAppointment : Appointment {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDateTime {
            get {
                return this.EventDateTimeField;
            }
            set {
                if ((this.EventDateTimeField.Equals(value) != true)) {
                    this.EventDateTimeField = value;
                    this.RaisePropertyChanged("EventDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordDateTime {
            get {
                return this.RecordDateTimeField;
            }
            set {
                if ((this.RecordDateTimeField.Equals(value) != true)) {
                    this.RecordDateTimeField = value;
                    this.RaisePropertyChanged("RecordDateTime");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpecialistType", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    public enum SpecialistType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        отсутстствует_неопределено = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        широкого_профиля = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        узкий = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AriaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFreeParticipantIEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFreeTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NearestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SnilsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AriaNumber {
            get {
                return this.AriaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AriaNumberField, value) != true)) {
                    this.AriaNumberField = value;
                    this.RaisePropertyChanged("AriaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFreeParticipantIE {
            get {
                return this.CountFreeParticipantIEField;
            }
            set {
                if ((this.CountFreeParticipantIEField.Equals(value) != true)) {
                    this.CountFreeParticipantIEField = value;
                    this.RaisePropertyChanged("CountFreeParticipantIE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFreeTicket {
            get {
                return this.CountFreeTicketField;
            }
            set {
                if ((this.CountFreeTicketField.Equals(value) != true)) {
                    this.CountFreeTicketField = value;
                    this.RaisePropertyChanged("CountFreeTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDoc {
            get {
                return this.IdDocField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDocField, value) != true)) {
                    this.IdDocField = value;
                    this.RaisePropertyChanged("IdDoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDate {
            get {
                return this.LastDateField;
            }
            set {
                if ((this.LastDateField.Equals(value) != true)) {
                    this.LastDateField = value;
                    this.RaisePropertyChanged("LastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NearestDate {
            get {
                return this.NearestDateField;
            }
            set {
                if ((this.NearestDateField.Equals(value) != true)) {
                    this.NearestDateField = value;
                    this.RaisePropertyChanged("NearestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Snils {
            get {
                return this.SnilsField;
            }
            set {
                if ((object.ReferenceEquals(this.SnilsField, value) != true)) {
                    this.SnilsField = value;
                    this.RaisePropertyChanged("Snils");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clinic", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Clinic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdLPUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPUFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPUShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LPUTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> District {
            get {
                return this.DistrictField;
            }
            set {
                if ((this.DistrictField.Equals(value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLPU {
            get {
                return this.IdLPUField;
            }
            set {
                if ((this.IdLPUField.Equals(value) != true)) {
                    this.IdLPUField = value;
                    this.RaisePropertyChanged("IdLPU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPUFullName {
            get {
                return this.LPUFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LPUFullNameField, value) != true)) {
                    this.LPUFullNameField = value;
                    this.RaisePropertyChanged("LPUFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPUShortName {
            get {
                return this.LPUShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LPUShortNameField, value) != true)) {
                    this.LPUShortNameField = value;
                    this.RaisePropertyChanged("LPUShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LPUType {
            get {
                return this.LPUTypeField;
            }
            set {
                if ((this.LPUTypeField.Equals(value) != true)) {
                    this.LPUTypeField = value;
                    this.RaisePropertyChanged("LPUType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Org", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Org : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChiefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GIS_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GIS_LayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Hub_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Org_AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Org_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Org_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WWWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chief {
            get {
                return this.ChiefField;
            }
            set {
                if ((object.ReferenceEquals(this.ChiefField, value) != true)) {
                    this.ChiefField = value;
                    this.RaisePropertyChanged("Chief");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> District {
            get {
                return this.DistrictField;
            }
            set {
                if ((this.DistrictField.Equals(value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GIS_ID {
            get {
                return this.GIS_IDField;
            }
            set {
                if ((this.GIS_IDField.Equals(value) != true)) {
                    this.GIS_IDField = value;
                    this.RaisePropertyChanged("GIS_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GIS_Layer {
            get {
                return this.GIS_LayerField;
            }
            set {
                if ((this.GIS_LayerField.Equals(value) != true)) {
                    this.GIS_LayerField = value;
                    this.RaisePropertyChanged("GIS_Layer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Hub_ID {
            get {
                return this.Hub_IDField;
            }
            set {
                if ((this.Hub_IDField.Equals(value) != true)) {
                    this.Hub_IDField = value;
                    this.RaisePropertyChanged("Hub_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Org_Address {
            get {
                return this.Org_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.Org_AddressField, value) != true)) {
                    this.Org_AddressField = value;
                    this.RaisePropertyChanged("Org_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Org_Name {
            get {
                return this.Org_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Org_NameField, value) != true)) {
                    this.Org_NameField = value;
                    this.RaisePropertyChanged("Org_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Org_Type {
            get {
                return this.Org_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Org_TypeField, value) != true)) {
                    this.Org_TypeField = value;
                    this.RaisePropertyChanged("Org_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WWW {
            get {
                return this.WWWField;
            }
            set {
                if ((object.ReferenceEquals(this.WWWField, value) != true)) {
                    this.WWWField = value;
                    this.RaisePropertyChanged("WWW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTime {
            get {
                return this.WorkTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTimeField, value) != true)) {
                    this.WorkTimeField = value;
                    this.RaisePropertyChanged("WorkTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Spesiality", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class Spesiality : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFreeParticipantIEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFreeTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FerIdSpesialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdSpesialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSpesialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NearestDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFreeParticipantIE {
            get {
                return this.CountFreeParticipantIEField;
            }
            set {
                if ((this.CountFreeParticipantIEField.Equals(value) != true)) {
                    this.CountFreeParticipantIEField = value;
                    this.RaisePropertyChanged("CountFreeParticipantIE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFreeTicket {
            get {
                return this.CountFreeTicketField;
            }
            set {
                if ((this.CountFreeTicketField.Equals(value) != true)) {
                    this.CountFreeTicketField = value;
                    this.RaisePropertyChanged("CountFreeTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FerIdSpesiality {
            get {
                return this.FerIdSpesialityField;
            }
            set {
                if ((object.ReferenceEquals(this.FerIdSpesialityField, value) != true)) {
                    this.FerIdSpesialityField = value;
                    this.RaisePropertyChanged("FerIdSpesiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdSpesiality {
            get {
                return this.IdSpesialityField;
            }
            set {
                if ((object.ReferenceEquals(this.IdSpesialityField, value) != true)) {
                    this.IdSpesialityField = value;
                    this.RaisePropertyChanged("IdSpesiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDate {
            get {
                return this.LastDateField;
            }
            set {
                if ((this.LastDateField.Equals(value) != true)) {
                    this.LastDateField = value;
                    this.RaisePropertyChanged("LastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSpesiality {
            get {
                return this.NameSpesialityField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSpesialityField, value) != true)) {
                    this.NameSpesialityField = value;
                    this.RaisePropertyChanged("NameSpesiality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NearestDate {
            get {
                return this.NearestDateField;
            }
            set {
                if ((this.NearestDateField.Equals(value) != true)) {
                    this.NearestDateField = value;
                    this.RaisePropertyChanged("NearestDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkingTime", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class WorkingTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenyCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecordableDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenyCause {
            get {
                return this.DenyCauseField;
            }
            set {
                if ((object.ReferenceEquals(this.DenyCauseField, value) != true)) {
                    this.DenyCauseField = value;
                    this.RaisePropertyChanged("DenyCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecordableDay {
            get {
                return this.RecordableDayField;
            }
            set {
                if ((this.RecordableDayField.Equals(value) != true)) {
                    this.RecordableDayField = value;
                    this.RaisePropertyChanged("RecordableDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitEnd {
            get {
                return this.VisitEndField;
            }
            set {
                if ((this.VisitEndField.Equals(value) != true)) {
                    this.VisitEndField = value;
                    this.RaisePropertyChanged("VisitEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitStart {
            get {
                return this.VisitStartField;
            }
            set {
                if ((this.VisitStartField.Equals(value) != true)) {
                    this.VisitStartField = value;
                    this.RaisePropertyChanged("VisitStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryRefusal", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class HistoryRefusal : HistoryVisit {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedAppointment1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private User UserCreatedAppointment1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="DateCreatedAppointment")]
        public System.DateTime DateCreatedAppointment1 {
            get {
                return this.DateCreatedAppointment1Field;
            }
            set {
                if ((this.DateCreatedAppointment1Field.Equals(value) != true)) {
                    this.DateCreatedAppointment1Field = value;
                    this.RaisePropertyChanged("DateCreatedAppointment1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="UserCreatedAppointment")]
        public User UserCreatedAppointment1 {
            get {
                return this.UserCreatedAppointment1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserCreatedAppointment1Field, value) != true)) {
                    this.UserCreatedAppointment1Field = value;
                    this.RaisePropertyChanged("UserCreatedAppointment1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryVisit", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HistoryRefusal))]
    public partial class HistoryVisit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedAppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Doctor DoctorBringReferalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Doctor DoctorRendingConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdAppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Spesiality SpecialityBringReferalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Spesiality SpecialityRendingConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private User UserCreatedAppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreatedAppointment {
            get {
                return this.DateCreatedAppointmentField;
            }
            set {
                if ((this.DateCreatedAppointmentField.Equals(value) != true)) {
                    this.DateCreatedAppointmentField = value;
                    this.RaisePropertyChanged("DateCreatedAppointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Doctor DoctorBringReferal {
            get {
                return this.DoctorBringReferalField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorBringReferalField, value) != true)) {
                    this.DoctorBringReferalField = value;
                    this.RaisePropertyChanged("DoctorBringReferal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Doctor DoctorRendingConsultation {
            get {
                return this.DoctorRendingConsultationField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorRendingConsultationField, value) != true)) {
                    this.DoctorRendingConsultationField = value;
                    this.RaisePropertyChanged("DoctorRendingConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdAppointment {
            get {
                return this.IdAppointmentField;
            }
            set {
                if ((object.ReferenceEquals(this.IdAppointmentField, value) != true)) {
                    this.IdAppointmentField = value;
                    this.RaisePropertyChanged("IdAppointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Spesiality SpecialityBringReferal {
            get {
                return this.SpecialityBringReferalField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialityBringReferalField, value) != true)) {
                    this.SpecialityBringReferalField = value;
                    this.RaisePropertyChanged("SpecialityBringReferal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Spesiality SpecialityRendingConsultation {
            get {
                return this.SpecialityRendingConsultationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialityRendingConsultationField, value) != true)) {
                    this.SpecialityRendingConsultationField = value;
                    this.RaisePropertyChanged("SpecialityRendingConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User UserCreatedAppointment {
            get {
                return this.UserCreatedAppointmentField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCreatedAppointmentField, value) != true)) {
                    this.UserCreatedAppointmentField = value;
                    this.RaisePropertyChanged("UserCreatedAppointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitStart {
            get {
                return this.VisitStartField;
            }
            set {
                if ((this.VisitStartField.Equals(value) != true)) {
                    this.VisitStartField = value;
                    this.RaisePropertyChanged("VisitStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HubUser))]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PositionType UserPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PositionType UserPosition {
            get {
                return this.UserPositionField;
            }
            set {
                if ((this.UserPositionField.Equals(value) != true)) {
                    this.UserPositionField = value;
                    this.RaisePropertyChanged("UserPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HubUser", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class HubUser : User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PublicGuidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDistrict {
            get {
                return this.IdDistrictField;
            }
            set {
                if ((this.IdDistrictField.Equals(value) != true)) {
                    this.IdDistrictField = value;
                    this.RaisePropertyChanged("IdDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PositionType", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    public enum PositionType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        отсутстствует_неопределено = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        медрегистратор = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        оператор = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        врач = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        портал = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        инфомат = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        система = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchedulerOfDoctor", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SchedulerOfDoctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Doctor DocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<SchedulerOfDoctorItem> ShedulerOfDoctorItemCollectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Doctor Doc {
            get {
                return this.DocField;
            }
            set {
                if ((object.ReferenceEquals(this.DocField, value) != true)) {
                    this.DocField = value;
                    this.RaisePropertyChanged("Doc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SchedulerOfDoctorItem> ShedulerOfDoctorItemCollection {
            get {
                return this.ShedulerOfDoctorItemCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShedulerOfDoctorItemCollectionField, value) != true)) {
                    this.ShedulerOfDoctorItemCollectionField = value;
                    this.RaisePropertyChanged("ShedulerOfDoctorItemCollection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchedulerOfDoctorItem", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class SchedulerOfDoctorItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Appointment AppointmentItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateStartCheckInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Patient PatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Appointment AppointmentItem {
            get {
                return this.AppointmentItemField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentItemField, value) != true)) {
                    this.AppointmentItemField = value;
                    this.RaisePropertyChanged("AppointmentItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateStartCheckIn {
            get {
                return this.DateStartCheckInField;
            }
            set {
                if ((this.DateStartCheckInField.Equals(value) != true)) {
                    this.DateStartCheckInField = value;
                    this.RaisePropertyChanged("DateStartCheckIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Patient Pat {
            get {
                return this.PatField;
            }
            set {
                if ((object.ReferenceEquals(this.PatField, value) != true)) {
                    this.PatField = value;
                    this.RaisePropertyChanged("Pat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LpuListToRFISZ", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class LpuListToRFISZ : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ExternalGisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ExternalHubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InfoStandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InternetReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableAppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableInternetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LpuNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LpuTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneCallCentreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ExternalGisId {
            get {
                return this.ExternalGisIdField;
            }
            set {
                if ((this.ExternalGisIdField.Equals(value) != true)) {
                    this.ExternalGisIdField = value;
                    this.RaisePropertyChanged("ExternalGisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ExternalHubId {
            get {
                return this.ExternalHubIdField;
            }
            set {
                if ((this.ExternalHubIdField.Equals(value) != true)) {
                    this.ExternalHubIdField = value;
                    this.RaisePropertyChanged("ExternalHubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDistrict {
            get {
                return this.IdDistrictField;
            }
            set {
                if ((this.IdDistrictField.Equals(value) != true)) {
                    this.IdDistrictField = value;
                    this.RaisePropertyChanged("IdDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InfoStand {
            get {
                return this.InfoStandField;
            }
            set {
                if ((this.InfoStandField.Equals(value) != true)) {
                    this.InfoStandField = value;
                    this.RaisePropertyChanged("InfoStand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternetReference {
            get {
                return this.InternetReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.InternetReferenceField, value) != true)) {
                    this.InternetReferenceField = value;
                    this.RaisePropertyChanged("InternetReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnableAppointment {
            get {
                return this.IsEnableAppointmentField;
            }
            set {
                if ((this.IsEnableAppointmentField.Equals(value) != true)) {
                    this.IsEnableAppointmentField = value;
                    this.RaisePropertyChanged("IsEnableAppointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnableInternet {
            get {
                return this.IsEnableInternetField;
            }
            set {
                if ((this.IsEnableInternetField.Equals(value) != true)) {
                    this.IsEnableInternetField = value;
                    this.RaisePropertyChanged("IsEnableInternet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LpuName {
            get {
                return this.LpuNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LpuNameField, value) != true)) {
                    this.LpuNameField = value;
                    this.RaisePropertyChanged("LpuName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LpuType {
            get {
                return this.LpuTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LpuTypeField, value) != true)) {
                    this.LpuTypeField = value;
                    this.RaisePropertyChanged("LpuType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneCallCentre {
            get {
                return this.PhoneCallCentreField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneCallCentreField, value) != true)) {
                    this.PhoneCallCentreField = value;
                    this.RaisePropertyChanged("PhoneCallCentre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTime {
            get {
                return this.WorkTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTimeField, value) != true)) {
                    this.WorkTimeField = value;
                    this.RaisePropertyChanged("WorkTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="District", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class District : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> OkatoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDistrict {
            get {
                return this.IdDistrictField;
            }
            set {
                if ((this.IdDistrictField.Equals(value) != true)) {
                    this.IdDistrictField = value;
                    this.RaisePropertyChanged("IdDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Okato {
            get {
                return this.OkatoField;
            }
            set {
                if ((this.OkatoField.Equals(value) != true)) {
                    this.OkatoField = value;
                    this.RaisePropertyChanged("Okato");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RulesOfWaitingList", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    [System.SerializableAttribute()]
    public partial class RulesOfWaitingList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimToWaitingListType", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    public enum ClaimToWaitingListType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        отсутствуют_свободные_талоны = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        нет_удобного_времени = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        отсутствует_специалист = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentSourceType", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    public enum AppointmentSourceType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ЦТО = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Инфомат = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Регистратура = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Врач_АПУ = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Интернет = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Прочее = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentStatusType", Namespace="http://schemas.datacontract.org/2004/07/HubService2")]
    public enum AppointmentStatusType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        запись_отменена_по_инициативе_ЛПУ = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        запись_отменена_по_инициативе_пациента = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        запись_перенесена = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        посещение_состоялось = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Api.IHubService")]
    public interface IHubService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/CheckPatient", ReplyAction="http://tempuri.org/IHubService/CheckPatientResponse")]
        CheckPatientResult CheckPatient(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/CheckPatient", ReplyAction="http://tempuri.org/IHubService/CheckPatientResponse")]
        System.Threading.Tasks.Task<CheckPatientResult> CheckPatientAsync(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SearchTop10Patient", ReplyAction="http://tempuri.org/IHubService/SearchTop10PatientResponse")]
        SearchTop10PatientResult SearchTop10Patient(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SearchTop10Patient", ReplyAction="http://tempuri.org/IHubService/SearchTop10PatientResponse")]
        System.Threading.Tasks.Task<SearchTop10PatientResult> SearchTop10PatientAsync(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/AddNewPatient", ReplyAction="http://tempuri.org/IHubService/AddNewPatientResponse")]
        AddNewPatientResult AddNewPatient(Patient patient, int idLpu, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/AddNewPatient", ReplyAction="http://tempuri.org/IHubService/AddNewPatientResponse")]
        System.Threading.Tasks.Task<AddNewPatientResult> AddNewPatientAsync(Patient patient, int idLpu, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetDocListFullTree", ReplyAction="http://tempuri.org/IHubService/GetDocListFullTreeResponse")]
        GetDocListFullTreeResult GetDocListFullTree(int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetDocListFullTree", ReplyAction="http://tempuri.org/IHubService/GetDocListFullTreeResponse")]
        System.Threading.Tasks.Task<GetDocListFullTreeResult> GetDocListFullTreeAsync(int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/InspectDoctorsReferal", ReplyAction="http://tempuri.org/IHubService/InspectDoctorsReferalResponse")]
        InspectDoctorsReferalResult InspectDoctorsReferal(string doctorsReferal, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/InspectDoctorsReferal", ReplyAction="http://tempuri.org/IHubService/InspectDoctorsReferalResponse")]
        System.Threading.Tasks.Task<InspectDoctorsReferalResult> InspectDoctorsReferalAsync(string doctorsReferal, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetAppointmentsDemandDoctorsReferal", ReplyAction="http://tempuri.org/IHubService/GetAppointmentsDemandDoctorsReferalResponse")]
        GetAvaibleAppointmentsResult GetAppointmentsDemandDoctorsReferal(string idDoc, int idLpu, string idPat, AppointmentType appType, System.DateTime startVisit, System.DateTime endVisit, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetAppointmentsDemandDoctorsReferal", ReplyAction="http://tempuri.org/IHubService/GetAppointmentsDemandDoctorsReferalResponse")]
        System.Threading.Tasks.Task<GetAvaibleAppointmentsResult> GetAppointmentsDemandDoctorsReferalAsync(string idDoc, int idLpu, string idPat, AppointmentType appType, System.DateTime startVisit, System.DateTime endVisit, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetAvaibleAppointments", ReplyAction="http://tempuri.org/IHubService/GetAvaibleAppointmentsResponse")]
        GetAvaibleAppointmentsResult GetAvaibleAppointments(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetAvaibleAppointments", ReplyAction="http://tempuri.org/IHubService/GetAvaibleAppointmentsResponse")]
        System.Threading.Tasks.Task<GetAvaibleAppointmentsResult> GetAvaibleAppointmentsAsync(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SetAppointment", ReplyAction="http://tempuri.org/IHubService/SetAppointmentResponse")]
        SetAppointmentResult SetAppointment(string idAppointment, int idLpu, string idPat, string doctorsReferal, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SetAppointment", ReplyAction="http://tempuri.org/IHubService/SetAppointmentResponse")]
        System.Threading.Tasks.Task<SetAppointmentResult> SetAppointmentAsync(string idAppointment, int idLpu, string idPat, string doctorsReferal, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetAvailableDates", ReplyAction="http://tempuri.org/IHubService/GetAvailableDatesResponse")]
        GetAvailableDatesResult GetAvailableDates(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetAvailableDates", ReplyAction="http://tempuri.org/IHubService/GetAvailableDatesResponse")]
        System.Threading.Tasks.Task<GetAvailableDatesResult> GetAvailableDatesAsync(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetDoctorList", ReplyAction="http://tempuri.org/IHubService/GetDoctorListResponse")]
        GetDoctorListResult GetDoctorList(string idSpesiality, int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetDoctorList", ReplyAction="http://tempuri.org/IHubService/GetDoctorListResponse")]
        System.Threading.Tasks.Task<GetDoctorListResult> GetDoctorListAsync(string idSpesiality, int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetLPUList", ReplyAction="http://tempuri.org/IHubService/GetLPUListResponse")]
        GetLPUListResult GetLPUList(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetLPUList", ReplyAction="http://tempuri.org/IHubService/GetLPUListResponse")]
        System.Threading.Tasks.Task<GetLPUListResult> GetLPUListAsync(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetOrgList", ReplyAction="http://tempuri.org/IHubService/GetOrgListResponse")]
        GetOrgListResult GetOrgList(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetOrgList", ReplyAction="http://tempuri.org/IHubService/GetOrgListResponse")]
        System.Threading.Tasks.Task<GetOrgListResult> GetOrgListAsync(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetSpesialityList", ReplyAction="http://tempuri.org/IHubService/GetSpesialityListResponse")]
        GetSpesialityListResult GetSpesialityList(int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetSpesialityList", ReplyAction="http://tempuri.org/IHubService/GetSpesialityListResponse")]
        System.Threading.Tasks.Task<GetSpesialityListResult> GetSpesialityListAsync(int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetLpuToRFSZIList", ReplyAction="http://tempuri.org/IHubService/GetLpuToRFSZIListResponse")]
        System.Collections.Generic.List<LpuListToRFISZ> GetLpuToRFSZIList(string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetLpuToRFSZIList", ReplyAction="http://tempuri.org/IHubService/GetLpuToRFSZIListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LpuListToRFISZ>> GetLpuToRFSZIListAsync(string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetDistrictList", ReplyAction="http://tempuri.org/IHubService/GetDistrictListResponse")]
        System.Collections.Generic.List<District> GetDistrictList(string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetDistrictList", ReplyAction="http://tempuri.org/IHubService/GetDistrictListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<District>> GetDistrictListAsync(string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetWorkingTime", ReplyAction="http://tempuri.org/IHubService/GetWorkingTimeResponse")]
        GetWorkingTimeResult GetWorkingTime(string idDoc, int idLpu, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetWorkingTime", ReplyAction="http://tempuri.org/IHubService/GetWorkingTimeResponse")]
        System.Threading.Tasks.Task<GetWorkingTimeResult> GetWorkingTimeAsync(string idDoc, int idLpu, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetFullInfoById", ReplyAction="http://tempuri.org/IHubService/GetFullInfoByIdResponse")]
        GetFullInfoByIdResult GetFullInfoById(string idDoc, int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetFullInfoById", ReplyAction="http://tempuri.org/IHubService/GetFullInfoByIdResponse")]
        System.Threading.Tasks.Task<GetFullInfoByIdResult> GetFullInfoByIdAsync(string idDoc, int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/CreateClaimForRefusal", ReplyAction="http://tempuri.org/IHubService/CreateClaimForRefusalResponse")]
        CreateClaimForRefusalResult CreateClaimForRefusal(int idLpu, string idPat, string idAppointment, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/CreateClaimForRefusal", ReplyAction="http://tempuri.org/IHubService/CreateClaimForRefusalResponse")]
        System.Threading.Tasks.Task<CreateClaimForRefusalResult> CreateClaimForRefusalAsync(int idLpu, string idPat, string idAppointment, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetPatientHistory", ReplyAction="http://tempuri.org/IHubService/GetPatientHistoryResponse")]
        GetPatientHistoryResult GetPatientHistory(int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetPatientHistory", ReplyAction="http://tempuri.org/IHubService/GetPatientHistoryResponse")]
        System.Threading.Tasks.Task<GetPatientHistoryResult> GetPatientHistoryAsync(int idLpu, string idPat, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/UpdatePhoneByIdPat", ReplyAction="http://tempuri.org/IHubService/UpdatePhoneByIdPatResponse")]
        UpdatePhoneByIdPatResult UpdatePhoneByIdPat(int idLpu, string idPat, string homePhone, string cellPhone, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/UpdatePhoneByIdPat", ReplyAction="http://tempuri.org/IHubService/UpdatePhoneByIdPatResponse")]
        System.Threading.Tasks.Task<UpdatePhoneByIdPatResult> UpdatePhoneByIdPatAsync(int idLpu, string idPat, string homePhone, string cellPhone, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetHubUserByGuid", ReplyAction="http://tempuri.org/IHubService/GetHubUserByGuidResponse")]
        GetHubUserByGuidResult GetHubUserByGuid(string usersGuid, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetHubUserByGuid", ReplyAction="http://tempuri.org/IHubService/GetHubUserByGuidResponse")]
        System.Threading.Tasks.Task<GetHubUserByGuidResult> GetHubUserByGuidAsync(string usersGuid, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetErrorList", ReplyAction="http://tempuri.org/IHubService/GetErrorListResponse")]
        GetErrorListResult GetErrorList(string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetErrorList", ReplyAction="http://tempuri.org/IHubService/GetErrorListResponse")]
        System.Threading.Tasks.Task<GetErrorListResult> GetErrorListAsync(string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SetWaitingList", ReplyAction="http://tempuri.org/IHubService/SetWaitingListResponse")]
        SetWaitingListResult SetWaitingList(string idDoc, string nameDoc, string idSpesiality, string nameSpesiality, int idLpu, RulesOfWaitingList rule, ClaimToWaitingListType claim, string idPat, string namePat, System.DateTime birthday, string phone, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SetWaitingList", ReplyAction="http://tempuri.org/IHubService/SetWaitingListResponse")]
        System.Threading.Tasks.Task<SetWaitingListResult> SetWaitingListAsync(string idDoc, string nameDoc, string idSpesiality, string nameSpesiality, int idLpu, RulesOfWaitingList rule, ClaimToWaitingListType claim, string idPat, string namePat, System.DateTime birthday, string phone, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetStatusAnalysis", ReplyAction="http://tempuri.org/IHubService/GetStatusAnalysisResponse")]
        GetStatusAnalysisResult GetStatusAnalysis(long idAnalysis, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetStatusAnalysis", ReplyAction="http://tempuri.org/IHubService/GetStatusAnalysisResponse")]
        System.Threading.Tasks.Task<GetStatusAnalysisResult> GetStatusAnalysisAsync(long idAnalysis, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SendNotificationAboutAppointment", ReplyAction="http://tempuri.org/IHubService/SendNotificationAboutAppointmentResponse")]
        SendNotificationAboutAppointmentResult SendNotificationAboutAppointment(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, Appointment appointment, AppointmentSourceType appointmentSource, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SendNotificationAboutAppointment", ReplyAction="http://tempuri.org/IHubService/SendNotificationAboutAppointmentResponse")]
        System.Threading.Tasks.Task<SendNotificationAboutAppointmentResult> SendNotificationAboutAppointmentAsync(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, Appointment appointment, AppointmentSourceType appointmentSource, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SendNotificationAboutAppointmentStatus", ReplyAction="http://tempuri.org/IHubService/SendNotificationAboutAppointmentStatusResponse")]
        SendNotificationAboutAppointmentStatusResult SendNotificationAboutAppointmentStatus(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, StatusAppointment appointment, AppointmentStatusType status, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/SendNotificationAboutAppointmentStatus", ReplyAction="http://tempuri.org/IHubService/SendNotificationAboutAppointmentStatusResponse")]
        System.Threading.Tasks.Task<SendNotificationAboutAppointmentStatusResult> SendNotificationAboutAppointmentStatusAsync(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, StatusAppointment appointment, AppointmentStatusType status, string guid, System.Nullable<int> idHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetTodayAppointments", ReplyAction="http://tempuri.org/IHubService/GetTodayAppointmentsResponse")]
        GetTodayAppointmentResult GetTodayAppointments(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetTodayAppointments", ReplyAction="http://tempuri.org/IHubService/GetTodayAppointmentsResponse")]
        System.Threading.Tasks.Task<GetTodayAppointmentResult> GetTodayAppointmentsAsync(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/CheckIn", ReplyAction="http://tempuri.org/IHubService/CheckInResponse")]
        CheckInResult CheckIn(string idAppointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/CheckIn", ReplyAction="http://tempuri.org/IHubService/CheckInResponse")]
        System.Threading.Tasks.Task<CheckInResult> CheckInAsync(string idAppointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetVersion", ReplyAction="http://tempuri.org/IHubService/GetVersionResponse")]
        GetVersionResult GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHubService/GetVersion", ReplyAction="http://tempuri.org/IHubService/GetVersionResponse")]
        System.Threading.Tasks.Task<GetVersionResult> GetVersionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHubServiceChannel : IHubService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HubServiceClient : System.ServiceModel.ClientBase<IHubService>, IHubService {
        
        public HubServiceClient() {
        }
        
        public HubServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HubServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HubServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HubServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CheckPatientResult CheckPatient(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory) {
            return base.Channel.CheckPatient(pat, idLpu, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<CheckPatientResult> CheckPatientAsync(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory) {
            return base.Channel.CheckPatientAsync(pat, idLpu, guid, idHistory);
        }
        
        public SearchTop10PatientResult SearchTop10Patient(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SearchTop10Patient(pat, idLpu, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<SearchTop10PatientResult> SearchTop10PatientAsync(Patient pat, int idLpu, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SearchTop10PatientAsync(pat, idLpu, guid, idHistory);
        }
        
        public AddNewPatientResult AddNewPatient(Patient patient, int idLpu, string guid, System.Nullable<int> idHistory) {
            return base.Channel.AddNewPatient(patient, idLpu, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<AddNewPatientResult> AddNewPatientAsync(Patient patient, int idLpu, string guid, System.Nullable<int> idHistory) {
            return base.Channel.AddNewPatientAsync(patient, idLpu, guid, idHistory);
        }
        
        public GetDocListFullTreeResult GetDocListFullTree(int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetDocListFullTree(idLpu, idPat, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetDocListFullTreeResult> GetDocListFullTreeAsync(int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetDocListFullTreeAsync(idLpu, idPat, guid, idHistory);
        }
        
        public InspectDoctorsReferalResult InspectDoctorsReferal(string doctorsReferal, string guid, System.Nullable<int> idHistory) {
            return base.Channel.InspectDoctorsReferal(doctorsReferal, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<InspectDoctorsReferalResult> InspectDoctorsReferalAsync(string doctorsReferal, string guid, System.Nullable<int> idHistory) {
            return base.Channel.InspectDoctorsReferalAsync(doctorsReferal, guid, idHistory);
        }
        
        public GetAvaibleAppointmentsResult GetAppointmentsDemandDoctorsReferal(string idDoc, int idLpu, string idPat, AppointmentType appType, System.DateTime startVisit, System.DateTime endVisit, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetAppointmentsDemandDoctorsReferal(idDoc, idLpu, idPat, appType, startVisit, endVisit, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetAvaibleAppointmentsResult> GetAppointmentsDemandDoctorsReferalAsync(string idDoc, int idLpu, string idPat, AppointmentType appType, System.DateTime startVisit, System.DateTime endVisit, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetAppointmentsDemandDoctorsReferalAsync(idDoc, idLpu, idPat, appType, startVisit, endVisit, guid, idHistory);
        }
        
        public GetAvaibleAppointmentsResult GetAvaibleAppointments(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetAvaibleAppointments(idDoc, idLpu, idPat, visitStart, visitEnd, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetAvaibleAppointmentsResult> GetAvaibleAppointmentsAsync(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetAvaibleAppointmentsAsync(idDoc, idLpu, idPat, visitStart, visitEnd, guid, idHistory);
        }
        
        public SetAppointmentResult SetAppointment(string idAppointment, int idLpu, string idPat, string doctorsReferal, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SetAppointment(idAppointment, idLpu, idPat, doctorsReferal, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<SetAppointmentResult> SetAppointmentAsync(string idAppointment, int idLpu, string idPat, string doctorsReferal, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SetAppointmentAsync(idAppointment, idLpu, idPat, doctorsReferal, guid, idHistory);
        }
        
        public GetAvailableDatesResult GetAvailableDates(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetAvailableDates(idDoc, idLpu, idPat, visitStart, visitEnd, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetAvailableDatesResult> GetAvailableDatesAsync(string idDoc, int idLpu, string idPat, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetAvailableDatesAsync(idDoc, idLpu, idPat, visitStart, visitEnd, guid, idHistory);
        }
        
        public GetDoctorListResult GetDoctorList(string idSpesiality, int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetDoctorList(idSpesiality, idLpu, idPat, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetDoctorListResult> GetDoctorListAsync(string idSpesiality, int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetDoctorListAsync(idSpesiality, idLpu, idPat, guid, idHistory);
        }
        
        public GetLPUListResult GetLPUList(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetLPUList(IdDistrict, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetLPUListResult> GetLPUListAsync(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetLPUListAsync(IdDistrict, guid, idHistory);
        }
        
        public GetOrgListResult GetOrgList(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetOrgList(IdDistrict, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetOrgListResult> GetOrgListAsync(System.Nullable<int> IdDistrict, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetOrgListAsync(IdDistrict, guid, idHistory);
        }
        
        public GetSpesialityListResult GetSpesialityList(int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetSpesialityList(idLpu, idPat, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetSpesialityListResult> GetSpesialityListAsync(int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetSpesialityListAsync(idLpu, idPat, guid, idHistory);
        }
        
        public System.Collections.Generic.List<LpuListToRFISZ> GetLpuToRFSZIList(string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetLpuToRFSZIList(guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LpuListToRFISZ>> GetLpuToRFSZIListAsync(string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetLpuToRFSZIListAsync(guid, idHistory);
        }
        
        public System.Collections.Generic.List<District> GetDistrictList(string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetDistrictList(guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<District>> GetDistrictListAsync(string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetDistrictListAsync(guid, idHistory);
        }
        
        public GetWorkingTimeResult GetWorkingTime(string idDoc, int idLpu, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetWorkingTime(idDoc, idLpu, visitStart, visitEnd, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetWorkingTimeResult> GetWorkingTimeAsync(string idDoc, int idLpu, System.DateTime visitStart, System.DateTime visitEnd, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetWorkingTimeAsync(idDoc, idLpu, visitStart, visitEnd, guid, idHistory);
        }
        
        public GetFullInfoByIdResult GetFullInfoById(string idDoc, int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetFullInfoById(idDoc, idLpu, idPat, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetFullInfoByIdResult> GetFullInfoByIdAsync(string idDoc, int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetFullInfoByIdAsync(idDoc, idLpu, idPat, guid, idHistory);
        }
        
        public CreateClaimForRefusalResult CreateClaimForRefusal(int idLpu, string idPat, string idAppointment, string guid, System.Nullable<int> idHistory) {
            return base.Channel.CreateClaimForRefusal(idLpu, idPat, idAppointment, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<CreateClaimForRefusalResult> CreateClaimForRefusalAsync(int idLpu, string idPat, string idAppointment, string guid, System.Nullable<int> idHistory) {
            return base.Channel.CreateClaimForRefusalAsync(idLpu, idPat, idAppointment, guid, idHistory);
        }
        
        public GetPatientHistoryResult GetPatientHistory(int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetPatientHistory(idLpu, idPat, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetPatientHistoryResult> GetPatientHistoryAsync(int idLpu, string idPat, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetPatientHistoryAsync(idLpu, idPat, guid, idHistory);
        }
        
        public UpdatePhoneByIdPatResult UpdatePhoneByIdPat(int idLpu, string idPat, string homePhone, string cellPhone, string guid, System.Nullable<int> idHistory) {
            return base.Channel.UpdatePhoneByIdPat(idLpu, idPat, homePhone, cellPhone, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<UpdatePhoneByIdPatResult> UpdatePhoneByIdPatAsync(int idLpu, string idPat, string homePhone, string cellPhone, string guid, System.Nullable<int> idHistory) {
            return base.Channel.UpdatePhoneByIdPatAsync(idLpu, idPat, homePhone, cellPhone, guid, idHistory);
        }
        
        public GetHubUserByGuidResult GetHubUserByGuid(string usersGuid, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetHubUserByGuid(usersGuid, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetHubUserByGuidResult> GetHubUserByGuidAsync(string usersGuid, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetHubUserByGuidAsync(usersGuid, guid, idHistory);
        }
        
        public GetErrorListResult GetErrorList(string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetErrorList(guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetErrorListResult> GetErrorListAsync(string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetErrorListAsync(guid, idHistory);
        }
        
        public SetWaitingListResult SetWaitingList(string idDoc, string nameDoc, string idSpesiality, string nameSpesiality, int idLpu, RulesOfWaitingList rule, ClaimToWaitingListType claim, string idPat, string namePat, System.DateTime birthday, string phone, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SetWaitingList(idDoc, nameDoc, idSpesiality, nameSpesiality, idLpu, rule, claim, idPat, namePat, birthday, phone, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<SetWaitingListResult> SetWaitingListAsync(string idDoc, string nameDoc, string idSpesiality, string nameSpesiality, int idLpu, RulesOfWaitingList rule, ClaimToWaitingListType claim, string idPat, string namePat, System.DateTime birthday, string phone, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SetWaitingListAsync(idDoc, nameDoc, idSpesiality, nameSpesiality, idLpu, rule, claim, idPat, namePat, birthday, phone, guid, idHistory);
        }
        
        public GetStatusAnalysisResult GetStatusAnalysis(long idAnalysis, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetStatusAnalysis(idAnalysis, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<GetStatusAnalysisResult> GetStatusAnalysisAsync(long idAnalysis, string guid, System.Nullable<int> idHistory) {
            return base.Channel.GetStatusAnalysisAsync(idAnalysis, guid, idHistory);
        }
        
        public SendNotificationAboutAppointmentResult SendNotificationAboutAppointment(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, Appointment appointment, AppointmentSourceType appointmentSource, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SendNotificationAboutAppointment(doctor, spesiality, idLpu, patient, appointment, appointmentSource, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<SendNotificationAboutAppointmentResult> SendNotificationAboutAppointmentAsync(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, Appointment appointment, AppointmentSourceType appointmentSource, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SendNotificationAboutAppointmentAsync(doctor, spesiality, idLpu, patient, appointment, appointmentSource, guid, idHistory);
        }
        
        public SendNotificationAboutAppointmentStatusResult SendNotificationAboutAppointmentStatus(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, StatusAppointment appointment, AppointmentStatusType status, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SendNotificationAboutAppointmentStatus(doctor, spesiality, idLpu, patient, appointment, status, guid, idHistory);
        }
        
        public System.Threading.Tasks.Task<SendNotificationAboutAppointmentStatusResult> SendNotificationAboutAppointmentStatusAsync(Doctor doctor, Spesiality spesiality, int idLpu, Patient patient, StatusAppointment appointment, AppointmentStatusType status, string guid, System.Nullable<int> idHistory) {
            return base.Channel.SendNotificationAboutAppointmentStatusAsync(doctor, spesiality, idLpu, patient, appointment, status, guid, idHistory);
        }
        
        public GetTodayAppointmentResult GetTodayAppointments(string guid) {
            return base.Channel.GetTodayAppointments(guid);
        }
        
        public System.Threading.Tasks.Task<GetTodayAppointmentResult> GetTodayAppointmentsAsync(string guid) {
            return base.Channel.GetTodayAppointmentsAsync(guid);
        }
        
        public CheckInResult CheckIn(string idAppointment) {
            return base.Channel.CheckIn(idAppointment);
        }
        
        public System.Threading.Tasks.Task<CheckInResult> CheckInAsync(string idAppointment) {
            return base.Channel.CheckInAsync(idAppointment);
        }
        
        public GetVersionResult GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<GetVersionResult> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
    }
}
